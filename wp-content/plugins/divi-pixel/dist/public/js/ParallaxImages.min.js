! function i(a, n, o) {
    function u(e, t) {
        if (!n[e]) {
            if (!a[e]) {
                var r = "function" == typeof require && require;
                if (!t && r) return r(e, !0);
                if (d) return d(e, !0);
                throw (t = new Error("Cannot find module '" + e + "'")).code = "MODULE_NOT_FOUND", t
            }
            r = n[e] = {
                exports: {}
            }, a[e][0].call(r.exports, function(t) {
                return u(a[e][1][t] || t)
            }, r, r.exports, i, a, n, o)
        }
        return n[e].exports
    }
    for (var d = "function" == typeof require && require, t = 0; t < o.length; t++) u(o[t]);
    return u
}({
    1: [function(t, e, r) {
        "use strict";

        function o(t) {
            return function(t) {
                if (Array.isArray(t)) return i(t)
            }(t) || function(t) {
                if ("undefined" != typeof Symbol && null != t[Symbol.iterator] || null != t["@@iterator"]) return Array.from(t)
            }(t) || function(t, e) {
                var r;
                if (t) return "string" == typeof t ? i(t, e) : "Map" === (r = "Object" === (r = Object.prototype.toString.call(t).slice(8, -1)) && t.constructor ? t.constructor.name : r) || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? i(t, e) : void 0
            }(t) || function() {
                throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }()
        }

        function i(t, e) {
            (null == e || e > t.length) && (e = t.length);
            for (var r = 0, i = new Array(e); r < e; r++) i[r] = t[r];
            return i
        }
        jQuery(function(t) {
            document.querySelectorAll(".dipi-parallax-images").forEach(function(e) {
                function r(t) {
                    t.forEach(function(t) {
                        var e = window.innerWidth;
                        980 < e && (t.setAttribute("data-depth-x", t.getAttribute("data-depth-x-desktop")), t.setAttribute("data-depth-y", t.getAttribute("data-depth-y-desktop"))), e <= 980 && (t.setAttribute("data-depth-x", t.getAttribute("data-depth-x-tablet")), t.setAttribute("data-depth-y", t.getAttribute("data-depth-y-tablet"))), e <= 767 && (t.setAttribute("data-depth-x", t.getAttribute("data-depth-x-phone")), t.setAttribute("data-depth-y", t.getAttribute("data-depth-y-phone")))
                    })
                }

                function i(t) {
                    var e = t.querySelectorAll(".et_pb_module.dipi_parallax_images_item"),
                        e = Array.from(e).map(function(t) {
                            return t.offsetHeight
                        }),
                        e = Math.max.apply(Math, o(e).concat([t.parentElement.offsetHeight]));
                    t.style.height = e + "px"
                }
                var t = "on" == e.getAttribute("data-hoveronly"),
                    a = document.querySelectorAll(".dipi_parallax_images_item"),
                    n = (a.forEach(function(t) {
                        var e = t.querySelector(".dipi-pi-item-image").getAttribute("data-depth-x"),
                            r = t.querySelector(".dipi-pi-item-image").getAttribute("data-depth-x-tablet"),
                            i = t.querySelector(".dipi-pi-item-image").getAttribute("data-depth-x-phone"),
                            a = t.querySelector(".dipi-pi-item-image").getAttribute("data-depth-y"),
                            n = t.querySelector(".dipi-pi-item-image").getAttribute("data-depth-y-tablet"),
                            o = t.querySelector(".dipi-pi-item-image").getAttribute("data-depth-x-phone");
                        t.setAttribute("data-depth-x-desktop", e), t.setAttribute("data-depth-x-tablet", r), t.setAttribute("data-depth-x-phone", i), t.setAttribute("data-depth-y-desktop", a), t.setAttribute("data-depth-y-tablet", n), t.setAttribute("data-depth-y-phone", o)
                    }), r(a), new Parallax(e, {
                        hoverOnly: t,
                        relativeInput: !0,
                        originX: .5,
                        originY: .5
                    }));
                i(e), window.addEventListener("resize", function(t) {
                    r(a), i(e), n.updateLayers()
                })
            })
        })
    }, {}]
}, {}, [1]);